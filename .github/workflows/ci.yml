name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: minitwitter
          POSTGRES_USER: minitwitter_user
          POSTGRES_PASSWORD: minitwitter_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U \$${{ services.db.env.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install coverage

      - name: Run migrations
        working-directory: backend
        run: |
          # Wait dataset start and migrate
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests with coverage
        working-directory: backend
        run: |
          coverage run --parallel-mode manage.py test
          coverage combine
          coverage report

      - name: Archive coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage_html_report
